name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Subir ambiente de desenvolvimento com Docker Compose
        run: docker compose -f docker-compose.dev.yml up -d

      # - name: Aguardando aplicação Docker Compose subir
      #   run: |
      #     echo "Esperando aplicação subir..."
      #     until curl -s http://localhost:8080/actuator/health | grep '"status": "UP"' > /dev/null; do
      #       sleep 5
      #     done

      - name: Execução dos testes unitários e integração
        run: mvn test

      - name: Parando aplicação docker
        run: docker compose -f docker-compose.dev.yml down

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da imagem Docker
        run: docker build -t filipesag/hortifruti-api:latest .

      - name: Push da imagem para o Docker Hub
        run: docker push filipesag/hortifruti-api:latest

      - name: Deploy na EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo yum install -y docker git
              sudo systemctl enable docker
              sudo systemctl start docker
            fi
      
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -SL https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi
      
            if [ ! -d "hortifruti-api" ]; then
              git clone https://github.com/filipesag/hortifruti-api.git
            else
              cd hortifruti-api && git pull && cd ..
            fi
      
            cd hortifruti-api
      
            sudo docker pull filipesag/hortifruti-api:latest
      
            export RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT }}"
            export RDS_USERNAME="${{ secrets.RDS_USERNAME }}"
            export RDS_PASSWORD="${{ secrets.RDS_PASSWORD }}"
      
            sudo RDS_ENDPOINT="$RDS_ENDPOINT" RDS_USERNAME="$RDS_USERNAME" RDS_PASSWORD="$RDS_PASSWORD" docker-compose -f docker-compose.prod.yml up -d --remove-orphans
